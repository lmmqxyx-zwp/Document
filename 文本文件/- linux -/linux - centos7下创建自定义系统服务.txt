1、简述
		CentOS 7的服务systemctl脚本存放在：/usr/lib/systemd/，有系统（system）和用户（user）之分，
	需要开机不登陆就能运行的程序，存在系统服务里，即：/usr/lib/systemd/system目录下。
		每一个服务以.service结尾，一般会分为3部分：[Unit]、[Service]和[Install]。

2、iptables服务
	[root@zwp-centos redmine-3.4.4]# cat /usr/lib/systemd/system/iptables.service
	[Unit]
	Description=IPv4 firewall with iptables
	Before=ip6tables.service
	After=syslog.target
	AssertPathExists=/etc/sysconfig/iptables

	[Service]
	Type=oneshot
	RemainAfterExit=yes
	ExecStart=/usr/libexec/iptables/iptables.init start
	ExecReload=/usr/libexec/iptables/iptables.init reload
	ExecStop=/usr/libexec/iptables/iptables.init stop
	Environment=BOOTUP=serial
	Environment=CONSOLETYPE=serial
	StandardOutput=syslog
	StandardError=syslog

	[Install]
	WantedBy=basic.target

3、创建一个nexus的服务
		[Unit]部分主要是对这个服务的说明，内容包括Description和After，Description用于描述服务，After
	用于描述服务类别;
		[Service]部分是服务的关键，是服务的一些具体运行参数的设置，这里Type=forking是后台运行的形式，
	PIDFile为存放PID的文件路径，ExecStart为服务的运行命令，ExecReload为重启命令，ExecStop为停止命令，
	PrivateTmp=True表示给服务分配独立的临时空间，注意：[Service]部分的启动、重启、停止命令全部要求使
	用绝对路径，使用相对路径则会报错;
		[Install]部分是服务安装的相关设置，可设置为多用户的

		以754的权限保存在/usr/lib/systemd/system目录下，这时就可以利用systemctl进行测试

	参数含义
		文件内容解释
		[Unit]:服务的说明
		Description:描述服务
		After:描述服务类别
		[Service]服务运行参数的设置
		Type=forking是后台运行的形式
		ExecStart为服务的具体运行命令
		ExecReload为重启命令
		ExecStop为停止命令
		PrivateTmp=True表示给服务分配独立的临时空间
		注意：启动、重启、停止命令全部要求使用绝对路径
		[Install]服务安装的相关设置，可设置为多用户

[Unit]
Description=nexus3.9 service

[Service]
Type=forking
ExecStart=/usr/local/common-utils/nexus3.9.0/nexus-3.9.0-01/bin/nexus run
ExecStop=/usr/local/common-utils/nexus3.9.0/nexus-3.9.0-01/bin/nexus stop

[Install]
WantedBy=basic.target
	
		

4、加入开机启动
	systemctl enable nexus  

5、查看启动的服务
	systemctl list-units --type=service

6、例子
	在／usr/lib/systemd/system下创建nginx.service文件内容如下（看应用需求也可以在 ／usr/lib/systemd/usr下创建）：
	
	[Unit]
	Description=nginx - high performance web server
	Documentation=http://nginx.org/en/docs/
	After=network.target remote-fs.target nss-lookup.target

	[Service]
	Type=forking
	PIDFile=/run/nginx.pid
	ExecStartPre=/usr/sbin/nginx-t -c /etc/nginx/nginx.conf
	ExecStart=/usr/sbin/nginx-c/etc/nginx/nginx.conf
	ExecReload=/bin/kill-s HUP $MAINPID
	ExecStop=/bin/kill-s QUIT $MAINPID
	PrivateTmp=true
	
	[Install]
	WantedBy=multi-user.target

-----------------------------------------------------------------------------------------------------------------
[Unit]
Description : 服务的简单描述
Documentation ： 服务文档
After= : 依赖，仅当依赖的服务启动之后再启动自定义的服务单元


[Service]
Type : 启动类型simple、forking、oneshot、notify、dbus
Type=simple（默认值）：systemd认为该服务将立即启动。服务进程不会fork。如果该服务要启动其他服务，不要使用此类型启动，除非该服务是socket激活型。
Type=forking：systemd认为当该服务进程fork，且父进程退出后服务启动成功。对于常规的守护进程（daemon），除非你确定此启动方式无法满足需求，使用此类型启动即可。使用此启动类型应同时指定 PIDFile=，以便systemd能够跟踪服务的主进程。
Type=oneshot：这一选项适用于只执行一项任务、随后立即退出的服务。可能需要同时设置 RemainAfterExit=yes 使得 systemd 在服务进程退出之后仍然认为服务处于激活状态。 
Type=notify：与 Type=simple 相同，但约定服务会在就绪后向 systemd 发送一个信号。这一通知的实现由 libsystemd-daemon.so 提供。 Type=dbus：若以此方式启动，当指定的 BusName 出现在DBus系统总线上时，systemd认为服务就绪。

 
PIDFile ： pid文件路径 
ExecStartPre ：启动前要做什么，上文中是测试配置文件 －t  
ExecStart：启动 
ExecReload：重载 
ExecStop：停止 
PrivateTmp：True表示给服务分配独立的临时空间


[Install]
WantedBy：服务安装的用户模式，从字面上看，就是想要使用这个服务的有是谁？上文中使用的是：multi-user.target ，就是指想要使用这个服务的目录是多用户。「以上全是个人理解，瞎猜的，如有不当，请大家多多指教」每一个.target实际上是链接到我们单位文件的集合,当我们执行：
 
 
